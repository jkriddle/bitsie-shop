<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNotFound" xml:space="preserve">
    <value>An account with this email address could not be found.</value>
    <comment>User attempted to reset password for non-existent account.</comment>
  </data>
  <data name="BidCanceled" xml:space="preserve">
    <value>Bid has been canceled.</value>
    <comment>When a user cancels a bid.</comment>
  </data>
  <data name="BidCancelError" xml:space="preserve">
    <value>An error has occurred while canceling this bid.</value>
    <comment>Bid cancellation error.</comment>
  </data>
  <data name="BidCreated" xml:space="preserve">
    <value>Bid has been created.</value>
    <comment>User places a bid.</comment>
  </data>
  <data name="CompanyApproved" xml:space="preserve">
    <value>Company has been approved.</value>
    <comment>When an admin approves a company.</comment>
  </data>
  <data name="CompanyRejected" xml:space="preserve">
    <value>Company has been rejected.</value>
    <comment>When an admin rejects a company.</comment>
  </data>
  <data name="CompanySignupSuccess" xml:space="preserve">
    <value>Company signup successful.</value>
    <comment>When a company signs up for service.</comment>
  </data>
  <data name="CompanyUpdated" xml:space="preserve">
    <value>Company has been updated successfully.</value>
    <comment>When a company is updated.</comment>
  </data>
  <data name="InvalidCredentials" xml:space="preserve">
    <value>Invalid email/password.</value>
    <comment>User attempted to login with invalid credentials.</comment>
  </data>
  <data name="PageUpdated" xml:space="preserve">
    <value>Page has been updated successfully.</value>
    <comment>When an admin updates a page.</comment>
  </data>
  <data name="PasswordResetLinkSent" xml:space="preserve">
    <value>Password reset email has been sent.</value>
    <comment>When user requests to reset password.</comment>
  </data>
  <data name="ResetKeyNotFound" xml:space="preserve">
    <value>Unable to find reset key.</value>
    <comment>When reset password token does not exist as specified.</comment>
  </data>
  <data name="ResetSuccessful" xml:space="preserve">
    <value>Password has been reset successfully. You will now be logged into the site.</value>
    <comment>When a user successfully resets their password.</comment>
  </data>
  <data name="TripCanceled" xml:space="preserve">
    <value>Trip has been canceled.</value>
    <comment>User cancels a trip.</comment>
  </data>
  <data name="TripConfirmation" xml:space="preserve">
    <value>Bid has been accepted.</value>
    <comment>Bid accepted.</comment>
  </data>
  <data name="TripCreated" xml:space="preserve">
    <value>Trip has been scheduled.</value>
    <comment>Ride is scheduled.</comment>
  </data>
  <data name="TripNotFound" xml:space="preserve">
    <value>Trip could not be found.</value>
    <comment>Unable to locate trip ID.</comment>
  </data>
  <data name="UserCreated" xml:space="preserve">
    <value>User has been created.</value>
    <comment>When a new user is created.</comment>
  </data>
  <data name="UserUpdated" xml:space="preserve">
    <value>Account has been updated successfully.</value>
    <comment>When a user updates their (or another user's) account.</comment>
  </data>
  <data name="VehicleCreated" xml:space="preserve">
    <value>Vehicle has been created successully.</value>
    <comment>When a user creates a new vehicle.</comment>
  </data>
  <data name="PhotoNotFound" xml:space="preserve">
    <value>Unable to find photo specified.</value>
    <comment>If user tries to upload a file and a system error occurs when retriving file.</comment>
  </data>
  <data name="VehicleUpdated" xml:space="preserve">
    <value>Vehicle has been updated successfully.</value>
    <comment>When a user updates a vehicle.</comment>
  </data>
</root>